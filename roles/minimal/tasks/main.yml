---
# tasks file for minimal
#

# Installing basic tools needed for future installs

- name: Install packages for minimal install
  become: yes
  apk:
    name:
      - xorg-server
      - bspwm
      - git
      - vim
      - fzf
      - fd
      - conky
      - less
      - the_silver_searcher
      - libx11-dev
      - libxft-dev
      - font-iosevka-nerd   #TODO: Check if this works and is the best solution
      - mlocate
      - build-base
      - feh
      - sxhkd
      - picom
      - lightdm
      - htop
      - mosh
    state: latest
    update_cache: yes

    #TODO: Add st install
- name: Install packages usefull for dev
  become: yes
  apk:
    name:
      - xev
      - xprop
    state: latest
    update_cache: yes


- name: Configs git usual name
  git_config:
    name: user.name
    scope: global
    value: 'alxndrpsclt'

- name: Configs git usual email
  git_config:
    name: user.email
    scope: global
    value: 'alxndr.psclt@gmail.com'

- name: Configs git editor
  git_config:
    name: core.editor
    scope: global
    value: vim

#TODO: Import gpg key

- name: Create keys directory
  become: yes
  file:
    path: "{{ HOME }}/.ssh/keys"
    group: "wheel"
    owner: "{{ USER }}"
    mode: "0755"
    state: directory

- name: Copy public ssh deploy key from local to host, needed to clone configs
  copy:
    src: "{{ item }}"
    dest: "{{ HOME }}/.ssh/keys/{{ item | basename }}"
    owner: "{{ USER }}"
    group: "wheel"
    mode: '0755'
  with_fileglob:
    - '{{ LOCAL_HOME }}/.ssh/keys/*.pub'

- name: Copy private ssh deploy key from local to host, needed to clone configs
  copy:
    src: "{{ item }}"
    dest: "{{ HOME }}/.ssh/keys/{{ item | basename }}"
    owner: "{{ USER }}"
    group: "wheel"
    mode: '0600'
  with_fileglob:
    - '{{ LOCAL_HOME }}/.ssh/keys/*.priv'

- name: Copy git{hub,lab} ssh config to allow interacting with the service
  copy:
    src: 'files/ssh_basic_config'
    dest: "{{ HOME }}/.ssh/config"
    owner: "{{ USER }}"
    group: 'wheel'
    mode: '0644'

      #- name: Generate local SSH keys
      #  shell: "ssh-keygen -t ed25519 -f {{ HOME }}/.ssh/id_ed25519 -q -N ''"
      #  args:
      #    creates: "{{ HOME }}/.ssh/id_ed25519"

#TODO: Extract variables like alxndrpsclt and put it in a playbook config file
#


  # Wallpapers
- name: Create an images directory if it does not exist
  file:
    path: "{{ HOME }}/images"
    state: directory
    mode: '0755'

- name: Clone personal fundamental wallpapers
  git:
    repo: 'git@github.com:AlxndrPsclt/fundmntl-wallpapers.git'
    dest: "{{ HOME }}/images/fundmntl-wallpapers"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes


- name: Create a config directory if it does not exist
  file:
    path: "{{ HOME }}/.config"
    state: directory
    mode: '0755'

- name: Clone personal configs
  git:
    repo: 'git@github.com:AlxndrPsclt/mnml-config.git'
    dest: "{{ HOME }}/.config/perso"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes




- name: Register existence of mnml config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove mnml config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create symbolic link for workstation config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"



- name: Copy lightdm config for autostart (temporary)
  become: yes
  copy:
    src: "{{ CONFIG_PERSO }}/lightdm/lightdm.conf"
    remote_src: yes
    dest: "/etc/lightdm/lightdm.conf"
    owner: "root"
    group: "root"
    mode: '0644'



- name: enable service lightdm
  become: yes
  service:
    name: lightdm
    state: started
    enabled: yes



- name: Create apps directories
  file:
    path: "{{ HOME }}/apps"
    state: directory

- name: Create apps/suckless directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/apps/suckless"
    state: directory




- name: Clone personal svkbd src
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-svkbd.git"
    dest: "{{ HOME }}/apps/suckless/mnml-svkbd"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Install dependency packages for svkbd compilation install
  become: yes
  apk:
    name:
      - libxtst-dev
      - libxinerama-dev
    state: latest
    update_cache: yes

- name: Compile minimalistic onscreen keaboard for mnml
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/mnml-svkbd"


- name: Clone personal lisgd (gesture recognition) src
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-lisgd.git"
    dest: "{{ HOME }}/apps/suckless/mnml-lisgd"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Install dependency packages for lisgd (gesture recognition) compilation install
  become: yes
  apk:
    name:
      - libinput-dev
    state: latest
    update_cache: yes

- name: Compile minimalistic gesture recognitons for mnml
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/mnml-lisgd"



- name: Clone personal st src
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-st.git"
    dest: "{{ HOME }}/apps/suckless/mnml-st"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Install dependency packages for st compilation install
  become: yes
  apk:
    name:
      - ncurses
    state: latest
    update_cache: yes

- name: Compile minimalistic terminal for mnml
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/mnml-st"



- name: Clone mnml dmenu src
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-dmenu.git"
    dest: "{{ HOME }}/apps/suckless/mnml-dmenu"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Compile minimalistic launcher/dmenu for mnml
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/mnml-dmenu"




- name: Install zsh and spaceship theme
  become: yes
  apk:
    name:
      - zsh
      - oh-my-zsh
      - zsh-vcs
    state: latest
    update_cache: yes


- name: Clone spaceship theme for oh-my-zsh
  become: yes
  git:
    repo: "https://github.com/denysdovhan/spaceship-prompt.git"
    dest: "/usr/share/oh-my-zsh/themes/spaceship-prompt" --depth=1
    depth: 1
    accept_hostkey: yes


- name: Create symbolic link for spaceship theme
  become: yes
  file:
    src: "/usr/share/oh-my-zsh/themes/spaceship-prompt/spaceship.zsh-theme"
    dest: "/usr/share/oh-my-zsh/themes/spaceship.zsh-theme"
    state: link



- name: Install and conf tmux to get proper theming
  become: yes
  apk:
    name:
      - tmux
      # tmux plugin manager tpm requires bash! WTF. Need to check how to avoid this, but included for now
      - bash
    state: latest
    update_cache: yes


- name: Clone personal vim config
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-vim.git"
    dest: "{{ HOME }}/.vim"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Clone vundle for vim plugins
  git:
    repo: "https://github.com/VundleVim/Vundle.vim.git"
    dest: "{{ HOME }}/.vim/bundle/Vundle.vim"
    accept_hostkey: yes




- name: Clone personal surf minimal browser src
  git:
    repo: "git@github.com:AlxndrPsclt/mnml-surf.git"
    dest: "{{ HOME }}/apps/suckless/mnml-surf"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"
    accept_hostkey: yes

- name: Install dependency packages for surf compilation install
  become: yes
  apk:
    name:
      - gtk+3.0-dev
      - webkit2gtk-dev
      - gcr-dev
    state: latest
    update_cache: yes

- name: Compile minimalistic surf browser for mnml
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/mnml-st"




  # 0-----------------------------------------------


  ## Clones private repos (passwords and stuff)
  #- include_vars: credentials.yml
  #
  #- name: Clone personal password vault
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/password-store.git"
  #    dest: "{{ HOME }}/.password-store"
  #
  #- name: Clone personal music diggings notes
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/music-diggings.git"
  #    dest: "{{ HOME }}/Notes"
  #
  #- name: Clone personal wallpapers folder
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/wallpapers.git"
  #    dest: "{{ HOME }}/Pictures/wallpapers"
  #
  #- name: Clone personal tasklist
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/tasks.git"
  #    dest: "{{ HOME }}/.task"


  #- debug: var=res
  #- meta: end_play    #Usefull for dev: ends the play right here
