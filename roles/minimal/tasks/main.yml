---
# tasks file for minimal
#

# Installing basic tools needed for future installs

- name: Install packages for minimal install
  become: yes
  apk:
    name:
      - git
      - vim
      - fzf
      - onboard
      - dbus-x11
      - man
      - man-pages
      - less
      - the_silver_searcher
      - avahi
      - libx11-dev
      - libxft-dev
      - avahi-daemon
      - avahi-dnsconf
      - font-iosevka-nerd   #TODO: Check if this works and is the best solution
      - mlocate
    state: latest
    update_cache: yes

    #TODO: Add st install

    #- name: Clone yay repo
    #  git:
    #    repo: 'https://aur.archlinux.org/yay.git'
    #    dest: '/tmp/yay'
    #    depth: 1
    #    force: yes
    #  when: is_yay_present.stdout == ""

- name: enable services avahi-daemon and ensure it is not masked
  become: yes
  systemd:
    name: avahi-daemon
    state: started
    enabled: yes
    masked: no

- name: enable services avahi-daemon and ensure it is not masked
  become: yes
  systemd:
    name: avahi-dnsconf
    state: started
    enabled: yes
    masked: no

- name: Configs git usual name
  git_config:
    name: user.name
    scope: global
    value: 'alxndrpsclt'

- name: Configs git usual email
  git_config:
    name: user.email
    scope: global
    value: 'alxndr.psclt@gmail.com'

- name: Configs git editor
  git_config:
    name: core.editor
    scope: global
    value: vim

#TODO: Import ssh key
#TODO: Extract variables like alxndrpsclt and put it in a playbook config file
#

- name: Create a directory if it does not exist
  file:
    path: "{{ HOME }}/.config"
    state: directory
    mode: '0755'

- name: Clone personal configs
  git:
    repo: 'https://github.com/AlxndrPsclt/mnml-config.git'
    dest: "{{ HOME }}/.config/perso"

- name: Register existence of workstation config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove workstation config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create symbolic link for workstation config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"

  #- name: Register existence of workstation config links needing sudo
  #  stat:
  #    path: "{{ item.dest }}"
  #  loop: "{{ links_to_create_sudo }}"
  #  register: link_register_sudo
  #
  #- name: Remove file to create links (sudo)
  #  file:
  #    path: "{{ item.stat.path }}"
  #    state: absent
  #  loop: "{{ link_register_sudo.results }}"
  #  when: item.stat.islnk is defined and item.stat.islnk == False
  #
  #- name: Create symbolic link for workstation tools needing sudo
  #  become: true
  #  file:
  #    src: "{{ item.src }}"
  #    dest: "{{ item.dest }}"
  #    state: link
  #  loop: "{{ links_to_create_sudo }}"

  ## Clones private repos (passwords and stuff)
  #- include_vars: credentials.yml
  #
  #- name: Clone personal password vault
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/password-store.git"
  #    dest: "{{ HOME }}/.password-store"
  #
  #- name: Clone personal music diggings notes
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/music-diggings.git"
  #    dest: "{{ HOME }}/Notes"
  #
  #- name: Clone personal wallpapers folder
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/wallpapers.git"
  #    dest: "{{ HOME }}/Pictures/wallpapers"
  #
  #- name: Clone personal tasklist
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/tasks.git"
  #    dest: "{{ HOME }}/.task"


  #- debug: var=res
  #- meta: end_play    #Usefull for dev: ends the play right here
