---
# tasks file for minimal
#

# Installing basic tools needed for future installs

- name: Install packages for minimal install
  become: yes
  apk:
    name:
      - xorg-server
      - bspwm
      - git
      - vim
      - fzf
      - onboard
      - dbus-x11
      - less
      - the_silver_searcher
      - libx11-dev
      - libxft-dev
      - font-iosevka-nerd   #TODO: Check if this works and is the best solution
      - mlocate
      - buildbase
      - feh
      - sxhkd
    state: latest
    update_cache: yes

    #TODO: Add st install

- name: Configs git usual name
  git_config:
    name: user.name
    scope: global
    value: 'alxndrpsclt'

- name: Configs git usual email
  git_config:
    name: user.email
    scope: global
    value: 'alxndr.psclt@gmail.com'

- name: Configs git editor
  git_config:
    name: core.editor
    scope: global
    value: vim

#TODO: Import gpg key

- name: Create keys directory
  become: yes
  file:
    path: "{{ HOME }}/.ssh/keys"
    group: "wheel"
    owner: "{{ USER }}"
    mode: "0755"
    state: directory

- name: Copy public ssh deploy key from local to host, needed to clone configs
  copy:
    src: "{{ item }}"
    dest: "{{ HOME }}/.ssh/keys/{{ item | basename }}"
    owner: "{{ USER }}"
    group: "wheel"
    mode: '0755'
  with_fileglob:
    - '{{ LOCAL_HOME }}/.ssh/keys/*.pub'

- name: Copy private ssh deploy key from local to host, needed to clone configs
  copy:
    src: "{{ item }}"
    dest: "{{ HOME }}/.ssh/keys/{{ item | basename }}"
    owner: "{{ USER }}"
    group: "wheel"
    mode: '0600'
  with_fileglob:
    - '{{ LOCAL_HOME }}/.ssh/keys/*.priv'

      #- name: Generate local SSH keys
      #  shell: "ssh-keygen -t ed25519 -f {{ HOME }}/.ssh/id_ed25519 -q -N ''"
      #  args:
      #    creates: "{{ HOME }}/.ssh/id_ed25519"

#TODO: Extract variables like alxndrpsclt and put it in a playbook config file
#

- name: Create a directory if it does not exist
  file:
    path: "{{ HOME }}/.config"
    state: directory
    mode: '0755'

- name: Clone personal configs
  git:
    repo: 'git@github.com:AlxndrPsclt/mnml-config.git'
    dest: "{{ HOME }}/.config/perso"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Register existence of mnml config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove mnml config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create symbolic link for workstation config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"

  ## Clones private repos (passwords and stuff)
  #- include_vars: credentials.yml
  #
  #- name: Clone personal password vault
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/password-store.git"
  #    dest: "{{ HOME }}/.password-store"
  #
  #- name: Clone personal music diggings notes
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/music-diggings.git"
  #    dest: "{{ HOME }}/Notes"
  #
  #- name: Clone personal wallpapers folder
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/wallpapers.git"
  #    dest: "{{ HOME }}/Pictures/wallpapers"
  #
  #- name: Clone personal tasklist
  #  git:
  #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/tasks.git"
  #    dest: "{{ HOME }}/.task"


  #- debug: var=res
  #- meta: end_play    #Usefull for dev: ends the play right here
